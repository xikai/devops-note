Last-Modified (通过修改时间标识文件)
当浏览器第一次通过http协议向WEB服务器发送文件请求时，WEB服务器返回给浏览器该文件的最后修改时间，用于浏览器下次请求该文件时，比对该文件在服务器上是否被修过

Etag  (通过md5文件内容标识文件)
当浏览器请求的文件在多个分布式WEB服务器上存在时，浏览器每次可能请求到不同的WEB服务器上，Last-Modified也会不同，而文件实际上并没有修改，这时候就只能通过文件唯一标识Etag来区分请求的文件是否被修改过。Etag值是对文件内容md5生成的哈希值；当http请求响应头部同时有Etag和Last-Modified时，Etag优先级更高。

Expires 
虽然通过Etag或Last-Modified可以在浏览缓存文件，但浏览器仍需每次发送请求询问WEB服务器是否需要更新缓存文件，而expires是WEB服务器给浏览器响应请求时设定的一个文件过期时间，告诉浏览器在没有到达过期时间时不要在发送该文件的http请求，直接取本地缓存。 

Cache-Control
当用户本地时间与WEB服务器时间不同步时，expires可能就会起不到作用。这时候通过设置Cache-Control max-age=3600,告诉浏览器缓存该请求文件在本地1小时，1小时内不要再发送该文件的http请求，直接取本地


优先级： Cache-Control > Expires > Etag > Last-Modified


--------------------------------------------------------------------------------
刷新缓存

F5或浏览器刷新按钮（缓存协商）：
会带上文件的Last-Modified-Since(匹配Last-Modified)和 If-None-Match（匹配Etag)头部，向WEB服务器发送一次请求，忽略Expires, Cache-Control是否到期。

Ctrl+F5(强制刷新)：
浏览器和WEB服务器不做缓存协商（浏览器不带任何缓存头部信息）发送一次全新的请求给WEB服务器重新获取文件内容


请求文件地址加版本号（http://s.test.com/js/index.js?v=20160715）
浏览器会认为这是一个新文件，而请求到WEB服务器时？号后面的参数会被WEB服务器忽略；等同于浏览器发送了一个全新的文件请求


参考文档：
https://www.cloudflare.com/zh-cn/learning/cdn/glossary/what-is-cache-control/

