#!/bin/bash
set -x

# sysctl
cat >> /etc/sysctl.conf <<EOF
fs.file-max=200000
net.ipv4.ip_forward = 1
net.ipv4.ip_local_port_range=1024 65500
net.ipv4.tcp_max_syn_backlog=32768
net.core.somaxconn=32768
net.ipv4.tcp_syncookies=1
vm.swappiness=0
vm.max_map_count=262144
vm.overcommit_memory=1
EOF
sysctl -p

# mount data volume
device_name=`lsblk -p|grep disk|tail -n 1|awk '{print $1}'`
mount_p="${mount_data_dir}"
mkdir $mount_p
mkfs.xfs $device_name
UUID=$(blkid -s UUID -o value "$device_name")
echo "UUID=$UUID $mount_p  xfs  defaults  0  0" >> /etc/fstab
mount $device_name $mount_p

# install ansible、docker、docker-compose
mkdir -p $mount_p/ansible
yum install -y ansible yum-utils git
yum remove -y docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine
yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
sed -i 's/mirrors.aliyun.com/mirrors.cloud.aliyuncs.com/' /etc/yum.repos.d/docker-ce.repo
sed -i 's/https/http/' /etc/yum.repos.d/docker-ce.repo
yum install -y docker-ce telnet unzip bind-utils lrzsz
mkdir $mount_p/docker
cat >/etc/docker/daemon.json<<EOD
{
    "data-root": "$mount_p/docker"
}
EOD
systemctl start docker
systemctl enable docker
curl -L "https://mirror.azure.cn/docker-toolbox/linux/compose/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/sbin/docker-compose
chmod +x /usr/local/sbin/docker-compose


image_url="registry.${acr_region}.aliyuncs.com/vevor-terraform"

# pull project from master branch
git clone https://oauth2:${git_token}@codeup.aliyun.com/newvevor-devops/ops-terraform.git /srv/ops-terraform

%{ for service in docker_services }
#docker-compose -f /srv/ops-terraform/docker/${service}/docker-compose.yaml up -d
sh /srv/ops-terraform/docker/${service}/start.sh $image_url >> /tmp/start.log 2>&1
%{ endfor }
